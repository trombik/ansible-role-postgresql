---
- hosts: localhost
  roles:
    - role: trombik.sysctl
    - ansible-role-postgresql
  vars:
    postgresql_initial_password: password
    postgresql_debug: yes
    os_sysctl:
      FreeBSD: {}
      OpenBSD:
        kern.seminfo.semmni: 60
        kern.seminfo.semmns: 1024
      Debian: {}
      RedHat: {}
    sysctl: "{{ os_sysctl[ansible_os_family] }}"

    os_postgresql_extra_packages:
      FreeBSD:
        - "databases/postgresql{{ postgresql_major_version }}-contrib"
      OpenBSD:
        - postgresql-contrib
      Debian:
        - postgresql-contrib
      RedHat:
        - "postgresql{{ postgresql_major_version }}-contrib"

    postgresql_extra_packages: "{{ os_postgresql_extra_packages[ansible_os_family] }}"
    postgresql_pg_hba_config: |
      host    all             all             127.0.0.1/32            {{ postgresql_default_auth_method }}
      host    all             all             ::1/128                 {{ postgresql_default_auth_method }}
      local   replication     all                                     trust
      host    replication     all             127.0.0.1/32            trust
      host    replication     all             ::1/128                 trust
    postgresql_config: |
      {% if ansible_os_family == 'Debian' %}
      data_directory = '{{ postgresql_db_dir }}'
      hba_file = '{{ postgresql_conf_dir }}/pg_hba.conf'
      ident_file = '{{ postgresql_conf_dir }}/pg_ident.conf'
      external_pid_file = '/var/run/postgresql/{{ postgresql_major_version }}-main.pid'
      port = 5432
      max_connections = 100
      unix_socket_directories = '/var/run/postgresql'
      ssl = on
      ssl_cert_file = '/etc/ssl/certs/ssl-cert-snakeoil.pem'
      ssl_key_file = '/etc/ssl/private/ssl-cert-snakeoil.key'
      shared_buffers = 128MB
      dynamic_shared_memory_type = posix
      log_line_prefix = '%m [%p] %q%u@%d '
      log_timezone = 'UTC'
      cluster_name = '{{ postgresql_major_version }}/main'
      stats_temp_directory = '/var/run/postgresql/{{ postgresql_major_version }}-main.pg_stat_tmp'
      datestyle = 'iso, mdy'
      timezone = 'UTC'
      lc_messages = 'C'
      lc_monetary = 'C'
      lc_numeric = 'C'
      lc_time = 'C'
      default_text_search_config = 'pg_catalog.english'
      include_dir = 'conf.d'
      password_encryption = {{ postgresql_default_auth_method }}
      {% else %}
      max_connections = 100
      shared_buffers = 128MB
      dynamic_shared_memory_type = posix
      max_wal_size = 1GB
      min_wal_size = 80MB
      log_destination = 'syslog'
      log_timezone = 'UTC'
      update_process_title = off
      datestyle = 'iso, mdy'
      timezone = 'UTC'
      lc_messages = 'C'
      lc_monetary = 'C'
      lc_numeric = 'C'
      lc_time = 'C'
      default_text_search_config = 'pg_catalog.english'
      password_encryption = {{ postgresql_default_auth_method }}
      {% endif %}
    postgresql_users:
      - name: foo
        password: PassWord
      - name: root
        password: AdminPassWord
        role_attr_flags: SUPERUSER

    postgresql_databases:
      - name: bar
        owner: foo
        state: present

    os_postgresql_initdb_flags:
      FreeBSD: ""
      OpenBSD: ""
      RedHat: ""
      # XXX you cannot use --auth-host or --auth-local here because
      # pg_createcluster, which is executed during the installation, override
      # them, forcing md5
      Debian: "--encoding=utf-8 --lc-collate=C --locale=en_US.UTF-8 --pwfile={{ postgresql_initial_password_file }}"
    postgresql_initdb_flags: "{{ os_postgresql_initdb_flags[ansible_os_family] }}"

    os_postgresql_initdb_env:
      FreeBSD: {}
      OpenBSD: {}
      Debian: {}
      RedHat:
        PGSETUP_INITDB_OPTIONS: "-D {{ postgresql_db_dir }} -U {{ postgresql_user }} --encoding=utf-8 --lc-collate=C --locale=en_US.UTF-8 --auth-host={{ postgresql_default_auth_method }} --auth-local={{ postgresql_default_auth_method }} --pwfile={{ postgresql_initial_password_file }}"
    postgresql_initdb_env: "{{ os_postgresql_initdb_env[ansible_os_family] }}"

    os_postgresql_initdb_command:
      FreeBSD: /usr/local/etc/rc.d/postgresql initdb
      OpenBSD: "su -l {{ postgresql_user }} -c '/usr/local/bin/initdb -D {{ postgresql_db_dir }} -U {{ postgresql_user }} --encoding=utf-8 --lc-collate=C --locale=en_US.UTF-8 --auth-host={{ postgresql_default_auth_method }} --auth-local={{ postgresql_default_auth_method }} --pwfile={{ postgresql_initial_password_file }}'"
      RedHat: "/usr/pgsql-{{ postgresql_major_version }}/bin/postgresql-{{ postgresql_major_version }}-setup initdb"
      Debian: False
    postgresql_initdb_command: "{{ os_postgresql_initdb_command[ansible_os_family] }}"
    os_postgresql_flags:
      FreeBSD: |
        postgresql_flags="-w -s -m fast"
        postgresql_initdb_flags="--encoding=utf-8 --lc-collate=C --auth-host={{ postgresql_default_auth_method }} --auth-local={{ postgresql_default_auth_method }} --pwfile={{ postgresql_initial_password_file }}"
      OpenBSD: ""
      Debian: ""
      RedHat: ""
    postgresql_flags: "{{ os_postgresql_flags[ansible_os_family] }}"
